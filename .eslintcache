[{"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\index.tsx":"1","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\App.tsx":"2","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\FileDragDrop\\FileDragDrop.tsx":"3","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\constants.tsx":"4","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Progress\\ProgressBar.tsx":"5","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Buttons\\StayledButton.tsx":"6","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Buttons\\CancleButton.tsx":"7","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\index.tsx":"8","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\App.tsx":"9","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Providers.tsx":"10","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastProvider.tsx":"11","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastContainer.tsx":"12","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastMessage.tsx":"13","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\HomePage\\Layout.tsx":"14","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\HomePage\\Home.tsx":"15","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Buttons\\StayledButton.tsx":"16","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastCustomMessage.tsx":"17","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Avatar\\Avatar.tsx":"18"},{"size":222,"mtime":1606942061793,"results":"19","hashOfConfig":"20"},{"size":1140,"mtime":1606951527245,"results":"21","hashOfConfig":"20"},{"size":10921,"mtime":1606995507533,"results":"22","hashOfConfig":"20"},{"size":1692,"mtime":1606941509511,"results":"23","hashOfConfig":"20"},{"size":2049,"mtime":1606943849676,"results":"24","hashOfConfig":"20"},{"size":2381,"mtime":1606942321522,"results":"25","hashOfConfig":"20"},{"size":590,"mtime":1606944214496,"results":"26","hashOfConfig":"20"},{"size":222,"mtime":1606942061793,"results":"27","hashOfConfig":"28"},{"size":320,"mtime":1607033246118,"results":"29","hashOfConfig":"28"},{"size":277,"mtime":1607020668834,"results":"30","hashOfConfig":"28"},{"size":4409,"mtime":1607260426915,"results":"31","hashOfConfig":"28"},{"size":1241,"mtime":1607261860677,"results":"32","hashOfConfig":"28"},{"size":3305,"mtime":1607263815306,"results":"33","hashOfConfig":"28"},{"size":230,"mtime":1607026910945,"results":"34","hashOfConfig":"28"},{"size":1969,"mtime":1607263564963,"results":"35","hashOfConfig":"28"},{"size":2422,"mtime":1607026163049,"results":"36","hashOfConfig":"28"},{"size":1379,"mtime":1607264265112,"results":"37","hashOfConfig":"28"},{"size":1792,"mtime":1607258786427,"results":"38","hashOfConfig":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"102f6c5",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"h9qkjs",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\index.tsx",[],["79","80"],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\App.tsx",["81"],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\FileDragDrop\\FileDragDrop.tsx",["82","83","84"],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\constants.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Progress\\ProgressBar.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Buttons\\StayledButton.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Buttons\\CancleButton.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\index.tsx",[],["85","86"],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\App.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Providers.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastProvider.tsx",["87","88","89","90"],"import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React, { useCallback, useContext, useState } from \"react\";\r\nimport ToastContainer from \"./ToastContainer\";\r\nimport { Truncate } from \"./ToastMessage\";\r\n\r\n/////////////////////////////////////\r\n/// Types\r\n/////////////////////////////////////\r\n\r\nexport type ToastProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\ntype TostMessageType = \"Info\" | \"Success\" | \"Warning\" | \"Error\";\r\n\r\nexport type Toast = {\r\n  id: string;\r\n  lifetime: number;\r\n  message: string | React.ReactNode;\r\n  type?: TostMessageType;\r\n  truncate?: Truncate;\r\n  icon?: IconProp;\r\n  header?: string;\r\n};\r\n\r\nexport type ToastContextType = {\r\n  data: Array<Toast>;\r\n  pushError(message: string, lifetime?: number, truncate?: Truncate): void;\r\n  pushWarning(message: string, lifetime?: number, truncate?: Truncate): void;\r\n  pushSuccess(message: string, lifetime?: number, truncate?: Truncate): void;\r\n  pushInfo(message: string, lifetime?: number, truncate?: Truncate): void;\r\n  push(\r\n    message: string,\r\n    type: TostMessageType,\r\n    lifetime?: number,\r\n    truncate?: Truncate\r\n  ): void;\r\n  pushCustom(\r\n    message: string | React.ReactNode,\r\n    lifetime: number,\r\n    truncate?: Truncate,\r\n    icon?: IconProp | React.ReactNode\r\n  ): void;\r\n  remove(id: string): void;\r\n};\r\n\r\n/////////////////////////////////////\r\n/// Global and Helpers\r\n/////////////////////////////////////\r\n\r\nexport const ToastContext = React.createContext<ToastContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nfunction uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport const useToast = () => useContext(ToastContext);\r\n\r\nconst DEFAULT_INTERVAL = 2500;\r\n\r\n/////////////////////////////////////\r\n/// Implementation\r\n/////////////////////////////////////\r\n\r\nexport default function ToastProvider({ children }: ToastProviderProps) {\r\n  const [data, setData] = useState<Array<Toast>>([]);\r\n\r\n  console.log(data);\r\n  const Push = useCallback(\r\n    (\r\n      message: string,\r\n      type: TostMessageType,\r\n      lifetime: number = DEFAULT_INTERVAL,\r\n      truncate?: Truncate\r\n    ) => {\r\n      if (message) {\r\n        const new_item: Toast = {\r\n          id: uuidv4(),\r\n          message: message,\r\n          type: type,\r\n          lifetime: lifetime,\r\n          truncate: truncate,\r\n        };\r\n\r\n        setData((prevState) => [...prevState, new_item]);\r\n      }\r\n    },\r\n    [setData, data]\r\n  );\r\n\r\n  const PushCustom = useCallback(\r\n    (\r\n      message: string | React.ReactNode,\r\n      lifetime: number = DEFAULT_INTERVAL,\r\n      truncate?: Truncate,\r\n      icon?: IconProp\r\n    ) => {\r\n      if (message) {\r\n        const new_item: Toast = {\r\n          id: uuidv4(),\r\n          message: message,\r\n          lifetime: lifetime,\r\n          truncate: truncate,\r\n          icon: icon,\r\n          type: undefined,\r\n        };\r\n\r\n        setData((prevState) => [...prevState, new_item]);\r\n      }\r\n    },\r\n    [setData, data]\r\n  );\r\n\r\n  const PushError = useCallback(\r\n    (message: string, lifetime?: number, truncate?: Truncate) =>\r\n      Push(message, \"Error\", lifetime, truncate),\r\n    [Push]\r\n  );\r\n  const PushWarning = useCallback(\r\n    (message: string, lifetime?: number, truncate?: Truncate) =>\r\n      Push(message, \"Warning\", lifetime, truncate),\r\n    [Push]\r\n  );\r\n  const PushSuccess = useCallback(\r\n    (message: string, lifetime?: number, truncate?: Truncate) =>\r\n      Push(message, \"Success\", lifetime, truncate),\r\n    [Push]\r\n  );\r\n  const PushInfo = useCallback(\r\n    (message: string, lifetime?: number, truncate?: Truncate) =>\r\n      Push(message, \"Info\", lifetime, truncate),\r\n    [Push]\r\n  );\r\n\r\n  const ToastContexd = useCallback(() => {\r\n    return {\r\n      data: data,\r\n      pushError: PushError,\r\n      pushWarning: PushWarning,\r\n      pushSuccess: PushSuccess,\r\n      pushInfo: PushInfo,\r\n      push: Push,\r\n      pushCustom: PushCustom,\r\n\r\n      async remove(id: string) {\r\n        setData((prevState) => prevState.filter((e) => e.id != id));\r\n      },\r\n    };\r\n  }, [data, PushError, PushWarning, PushSuccess, PushInfo, Push, PushCustom]);\r\n\r\n  return (\r\n    <ToastContext.Provider value={ToastContexd()}>\r\n      <ToastContainer />\r\n      {children}\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastContainer.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastMessage.tsx",["91","92"],"import React, { useEffect } from \"react\";\r\nimport { Toast } from \"./ToastProvider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faExclamationCircle,\r\n  faCheck,\r\n  faInfoCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport clsx from \"clsx\";\r\n\r\nconst VARIANTS = {\r\n  Info: {\r\n    base: \"bg-white border-blue-500\",\r\n    iconstyle: \"text-blue-500 \",\r\n    icon: faInfoCircle,\r\n    name: \"Info\",\r\n  },\r\n\r\n  Error: {\r\n    base: \"bg-white border-red-500 \",\r\n    iconstyle: \"text-red-500 \",\r\n    icon: faExclamationCircle,\r\n    name: \"Error\",\r\n  },\r\n\r\n  Warning: {\r\n    base: \"bg-white border-yellow-500\",\r\n    iconstyle: \"text-yellow-500 \",\r\n    icon: faExclamationCircle,\r\n    name: \"Warning\",\r\n  },\r\n\r\n  Success: {\r\n    base: \"bg-white border-green-500\",\r\n    iconstyle: \"text-green-500 \",\r\n    icon: faCheck,\r\n    name: \"Success\",\r\n  },\r\n};\r\n\r\nexport type Truncate =\r\n  | \"truncate-1-lines\"\r\n  | \"truncate-2-lines\"\r\n  | \"truncate-3-lines\";\r\n\r\nexport type ToastMessage = {\r\n  id: string;\r\n  lifetime?: number;\r\n  variant?: keyof typeof VARIANTS | undefined;\r\n  onRemove?: (id: string) => void;\r\n  truncate?: Truncate;\r\n} & Toast;\r\n\r\nexport default function ToastMessage({\r\n  id,\r\n  header,\r\n  message,\r\n  lifetime,\r\n  onRemove,\r\n  truncate = \"truncate-1-lines\",\r\n  icon,\r\n  type,\r\n}: ToastMessage) {\r\n  const Var = type\r\n    ? VARIANTS[type]\r\n    : {\r\n        base: \"bg-white border-gray-600 \",\r\n        iconstyle: \"\",\r\n        icon: icon,\r\n        name: header,\r\n      };\r\n\r\n  useEffect(() => {\r\n    if (lifetime && onRemove) {\r\n      setTimeout(() => {\r\n        onRemove(id);\r\n      }, lifetime);\r\n    }\r\n  }, [lifetime]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        \"flex w-full visible flex-row shadow-lg\",\r\n        \"border-l-4 rounded-md duration-100 cursor-pointer\",\r\n        \"transform transition-all hover:scale-102\",\r\n        Var.base,\r\n        type && \"max-h-40\"\r\n      )}\r\n    >\r\n      <div className=\"flex flex-row p-2 flex-no-wrap w-full\">\r\n        {Var.icon && (\r\n          <div\r\n            className={clsx(\r\n              \"flex items-center h-12 w-12\",\r\n              \"mx-auto text-xl select-none\"\r\n            )}\r\n          >\r\n            <FontAwesomeIcon\r\n              className={clsx(\"mx-auto\", Var.iconstyle)}\r\n              icon={Var.icon}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex flex-col flex-no-wrap px-1 w-full\">\r\n          <div className=\"flex my-auto font-bold select-none\">{Var.name}</div>\r\n          <p\r\n            className={clsx(\r\n              \"-mt-0.5 my-auto break-all flex\",\r\n              \"text-gray-600 text-sm\",\r\n              typeof message === \"string\" && truncate\r\n            )}\r\n          >\r\n            {message}\r\n          </p>\r\n        </div>\r\n        <div\r\n          onClick={() => onRemove && onRemove(id)}\r\n          className={clsx(\r\n            \"w-10 h-12 mr-2 items-center mx-auto\",\r\n            \"text-center leading-none text-lg\"\r\n          )}\r\n        >\r\n          <FontAwesomeIcon\r\n            className={clsx(\r\n              \"mx-auto my-auto h-full text-center text-gray-600\",\r\n              \"cursor-pointer hover:scale-105 transform \"\r\n            )}\r\n            icon={faTimes}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\HomePage\\Layout.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\HomePage\\Home.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Buttons\\StayledButton.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastCustomMessage.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Avatar\\Avatar.tsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":59,"column":3,"nodeType":"103","endLine":80,"endColumn":4},{"ruleId":"101","severity":1,"message":"104","line":246,"column":28,"nodeType":"99","endLine":246,"endColumn":35},{"ruleId":"101","severity":1,"message":"105","line":255,"column":6,"nodeType":"106","endLine":255,"endColumn":44,"suggestions":"107"},{"ruleId":"93","replacedBy":"108"},{"ruleId":"95","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":58,"column":13,"nodeType":"112","messageId":"113","endLine":58,"endColumn":15},{"ruleId":"101","severity":1,"message":"114","line":94,"column":5,"nodeType":"106","endLine":94,"endColumn":20,"suggestions":"115"},{"ruleId":"101","severity":1,"message":"114","line":117,"column":5,"nodeType":"106","endLine":117,"endColumn":20,"suggestions":"116"},{"ruleId":"110","severity":1,"message":"117","line":152,"column":61,"nodeType":"112","messageId":"113","endLine":152,"endColumn":63},{"ruleId":"118","severity":1,"message":"119","line":55,"column":25,"nodeType":"99","messageId":"120","endLine":55,"endColumn":37},{"ruleId":"101","severity":1,"message":"121","line":80,"column":6,"nodeType":"106","endLine":80,"endColumn":16,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'upload' function makes the dependencies of useCallback Hook (at line 218) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'upload' in its own useCallback() Hook.","FunctionDeclaration","The ref value 'divRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'divRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'onDrop'. Either include it or remove the dependency array.","ArrayExpression",["125"],["123"],["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has an unnecessary dependency: 'data'. Either exclude it or remove the dependency array.",["126"],["127"],"Expected '!==' and instead saw '!='.","@typescript-eslint/no-redeclare","'ToastMessage' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'id' and 'onRemove'. Either include them or remove the dependency array. If 'onRemove' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [onDragEnter, onDragLeave, onDragOver, onDrop]",{"range":"136","text":"137"},"Update the dependencies array to be: [setData]",{"range":"138","text":"139"},{"range":"140","text":"139"},"Update the dependencies array to be: [id, lifetime, onRemove]",{"range":"141","text":"142"},[7063,7101],"[onDragEnter, onDragLeave, onDragOver, onDrop]",[2564,2579],"[setData]",[3098,3113],[1663,1673],"[id, lifetime, onRemove]"]