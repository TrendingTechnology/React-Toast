[{"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\index.tsx":"1","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\App.tsx":"2","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\FileDragDrop\\FileDragDrop.tsx":"3","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\constants.tsx":"4","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Progress\\ProgressBar.tsx":"5","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Buttons\\StayledButton.tsx":"6","C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Buttons\\CancleButton.tsx":"7","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\index.tsx":"8","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\App.tsx":"9","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Providers.tsx":"10","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastProvider.tsx":"11","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastContainer.tsx":"12","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastMessage.tsx":"13","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\HomePage\\Layout.tsx":"14","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\HomePage\\Home.tsx":"15","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Buttons\\StayledButton.tsx":"16"},{"size":222,"mtime":1606942061793,"results":"17","hashOfConfig":"18"},{"size":1140,"mtime":1606951527245,"results":"19","hashOfConfig":"18"},{"size":10921,"mtime":1606995507533,"results":"20","hashOfConfig":"18"},{"size":1692,"mtime":1606941509511,"results":"21","hashOfConfig":"18"},{"size":2049,"mtime":1606943849676,"results":"22","hashOfConfig":"18"},{"size":2381,"mtime":1606942321522,"results":"23","hashOfConfig":"18"},{"size":590,"mtime":1606944214496,"results":"24","hashOfConfig":"18"},{"size":222,"mtime":1606942061793,"results":"25","hashOfConfig":"26"},{"size":306,"mtime":1607028033117,"results":"27","hashOfConfig":"26"},{"size":277,"mtime":1607020668834,"results":"28","hashOfConfig":"26"},{"size":3124,"mtime":1607028083141,"results":"29","hashOfConfig":"26"},{"size":1054,"mtime":1607027272876,"results":"30","hashOfConfig":"26"},{"size":2786,"mtime":1607027788358,"results":"31","hashOfConfig":"26"},{"size":230,"mtime":1607026910945,"results":"32","hashOfConfig":"26"},{"size":1441,"mtime":1607029455186,"results":"33","hashOfConfig":"26"},{"size":2422,"mtime":1607026163049,"results":"34","hashOfConfig":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"102f6c5",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"h9qkjs",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\index.tsx",[],["71","72"],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\App.tsx",["73"],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\FileDragDrop\\FileDragDrop.tsx",["74","75","76"],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\constants.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Progress\\ProgressBar.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Buttons\\StayledButton.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\Drag-Drop-File\\File-DragDropper\\src\\Components\\Buttons\\CancleButton.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\index.tsx",[],["77","78"],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\App.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Providers.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastProvider.tsx",["79","80","81"],"import React, { useCallback, useContext, useState } from \"react\";\r\nimport ToastContainer from \"./ToastContainer\";\r\n\r\n/////////////////////////////////////\r\n/// Types\r\n/////////////////////////////////////\r\n\r\nexport type ToastProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\ntype TostMessageType = \"Info\" | \"Success\" | \"Warning\" | \"Error\" | \"Default\";\r\n\r\nexport type Toast = {\r\n  id: string;\r\n  type: TostMessageType;\r\n  message: string;\r\n  lifetime: number;\r\n};\r\n\r\nexport type ToastContextType = {\r\n  data: Array<Toast>;\r\n  pushError(message: string, lifetime?: number): void;\r\n  pushWarning(message: string, lifetime?: number): void;\r\n  pushSuccess(message: string, lifetime?: number): void;\r\n  pushInfo(message: string, lifetime?: number): void;\r\n  push(message: string, type: TostMessageType, lifetime?: number): void;\r\n  remove(id: string): void;\r\n};\r\n\r\n/////////////////////////////////////\r\n/// Global\r\n/////////////////////////////////////\r\n\r\nexport const ToastContext = React.createContext<ToastContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nfunction uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport const useToast = () => useContext(ToastContext);\r\n\r\n/////////////////////////////////////\r\n/// Implementation\r\n/////////////////////////////////////\r\n\r\nconst DEFAULT_INTERVAL = 2500;\r\n\r\nexport default function ToastProvider({ children }: ToastProviderProps) {\r\n  const [data, setData] = useState<Array<Toast>>([]);\r\n\r\n  const Push = useCallback(\r\n    (\r\n      message: string,\r\n      type: TostMessageType,\r\n      lifetime: number = DEFAULT_INTERVAL\r\n    ) => {\r\n      if (message) {\r\n        const new_item: Toast = {\r\n          id: uuidv4(),\r\n          message: message,\r\n          type: type,\r\n          lifetime: lifetime,\r\n        };\r\n\r\n        setData((prevState) => [...prevState, new_item]);\r\n      }\r\n    },\r\n    [setData, data]\r\n  );\r\n\r\n  const PushError = useCallback(\r\n    (message: string, lifetime?: number) => Push(message, \"Error\", lifetime),\r\n    [Push]\r\n  );\r\n  const PushWarning = useCallback(\r\n    (message: string, lifetime?: number) => Push(message, \"Warning\", lifetime),\r\n    [Push]\r\n  );\r\n  const PushSuccess = useCallback(\r\n    (message: string, lifetime?: number) => Push(message, \"Success\", lifetime),\r\n    [Push]\r\n  );\r\n  const PushInfo = useCallback(\r\n    (message: string, lifetime?: number) => Push(message, \"Info\", lifetime),\r\n    [Push]\r\n  );\r\n\r\n  const ToastContexd = useCallback(() => {\r\n    return {\r\n      data: data,\r\n      pushError: PushError,\r\n      pushWarning: PushWarning,\r\n      pushSuccess: PushSuccess,\r\n      pushInfo: PushInfo,\r\n      push: Push,\r\n\r\n      async remove(id: string) {\r\n        setData((prevState) => prevState.filter((e) => e.id != id));\r\n      },\r\n    };\r\n  }, [data, PushError, PushWarning, PushSuccess, PushInfo, Push]);\r\n\r\n  return (\r\n    <ToastContext.Provider value={ToastContexd()}>\r\n      <ToastContainer />\r\n      {children}\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastContainer.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Toast\\ToastMessage.tsx",["82","83"],"import React, { useEffect } from \"react\";\r\nimport { Toast } from \"./ToastProvider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimes,\r\n  faExclamationCircle,\r\n  faCheck,\r\n  faInfoCircle,\r\n  faQuestionCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport clsx from \"clsx\";\r\n\r\nconst VARIANTS = {\r\n  Info: {\r\n    base: \"bg-white border-blue-500\",\r\n    iconstyle: \"text-blue-500 \",\r\n    icon: faInfoCircle,\r\n    name: \"Info\",\r\n  },\r\n\r\n  Error: {\r\n    base: \"bg-white border-red-500 \",\r\n    iconstyle: \"text-red-500 \",\r\n    icon: faExclamationCircle,\r\n    name: \"Error\",\r\n  },\r\n\r\n  Warning: {\r\n    base: \"bg-white border-yellow-500\",\r\n    iconstyle: \"text-yellow-500 \",\r\n    icon: faExclamationCircle,\r\n    name: \"Warning\",\r\n  },\r\n\r\n  Success: {\r\n    base: \"bg-white border-green-500\",\r\n    iconstyle: \"text-green-500 \",\r\n    icon: faCheck,\r\n    name: \"Success\",\r\n  },\r\n\r\n  Default: {\r\n    base: \"bg-white border-gray-600 \",\r\n    iconstyle: \"text-gray-600 \",\r\n    icon: faQuestionCircle,\r\n    name: \"\",\r\n  },\r\n};\r\n\r\nexport type ToastMessage = {\r\n  id: string;\r\n  lifetime?: number;\r\n  variant?: keyof typeof VARIANTS;\r\n  onRemove?: (id: string) => void;\r\n} & Toast;\r\n\r\nexport default function ToastMessage({\r\n  id,\r\n  message,\r\n  lifetime,\r\n  onRemove,\r\n  variant = \"Success\",\r\n}: ToastMessage) {\r\n  const Var = VARIANTS[variant] || VARIANTS.Info;\r\n\r\n  useEffect(() => {\r\n    if (lifetime && onRemove) {\r\n      setTimeout(() => {\r\n        onRemove(id);\r\n      }, lifetime);\r\n    }\r\n  }, [lifetime, onRemove, clearTimeout]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        \"flex w-full visible flex-row shadow-lg\",\r\n        \"border-l-4 rounded-md duration-100 cursor-pointer\",\r\n        \"transform transition-all h-16 hover:scale-102\",\r\n        Var.base\r\n      )}\r\n    >\r\n      <div className=\"flex flex-row flex-no-wrap w-full\">\r\n        <div className=\"flex w-12 mx-auto my-auto text-xl select-none\">\r\n          <FontAwesomeIcon\r\n            className={clsx(\"mx-auto\", Var.iconstyle)}\r\n            icon={Var.icon}\r\n          />\r\n        </div>\r\n        <div className=\"flex-auto md:flex md:w-48 flex-col my-auto flex-no-wrap px-1\">\r\n          <div className=\"flex my-auto font-bold select-none\">{Var.name}</div>\r\n          <p className=\"text-gray-600 my-auto truncate text-sm\">{message}</p>\r\n        </div>\r\n        <div\r\n          onClick={() => onRemove && onRemove(id)}\r\n          className=\"w-10 my-auto mx-auto text-center text-lg\"\r\n        >\r\n          <FontAwesomeIcon\r\n            className={clsx(\r\n              \"mx-auto text-center text-gray-600\",\r\n              \"cursor-pointer hover:scale-105 transform mr-3 ml-2\"\r\n            )}\r\n            icon={faTimes}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\HomePage\\Layout.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\HomePage\\Home.tsx",[],"C:\\Users\\dakupc\\Documents\\.NetDev\\React Toast Component\\src\\Components\\Buttons\\StayledButton.tsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":9,"column":10,"nodeType":"90","messageId":"91","endLine":9,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":59,"column":3,"nodeType":"94","endLine":80,"endColumn":4},{"ruleId":"92","severity":1,"message":"95","line":246,"column":28,"nodeType":"90","endLine":246,"endColumn":35},{"ruleId":"92","severity":1,"message":"96","line":255,"column":6,"nodeType":"97","endLine":255,"endColumn":44,"suggestions":"98"},{"ruleId":"84","replacedBy":"99"},{"ruleId":"86","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":42,"column":13,"nodeType":"103","messageId":"104","endLine":42,"endColumn":15},{"ruleId":"92","severity":1,"message":"105","line":75,"column":5,"nodeType":"97","endLine":75,"endColumn":20,"suggestions":"106"},{"ruleId":"101","severity":1,"message":"107","line":105,"column":61,"nodeType":"103","messageId":"104","endLine":105,"endColumn":63},{"ruleId":"108","severity":1,"message":"109","line":57,"column":25,"nodeType":"90","messageId":"110","endLine":57,"endColumn":37},{"ruleId":"92","severity":1,"message":"111","line":72,"column":6,"nodeType":"97","endLine":72,"endColumn":40,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'upload' function makes the dependencies of useCallback Hook (at line 218) change on every render. Move it inside the useCallback callback. Alternatively, wrap the definition of 'upload' in its own useCallback() Hook.","FunctionDeclaration","The ref value 'divRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'divRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'onDrop'. Either include it or remove the dependency array.","ArrayExpression",["115"],["113"],["114"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has an unnecessary dependency: 'data'. Either exclude it or remove the dependency array.",["116"],"Expected '!==' and instead saw '!='.","@typescript-eslint/no-redeclare","'ToastMessage' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array. Outer scope values like 'clearTimeout' aren't valid dependencies because mutating them doesn't re-render the component.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [onDragEnter, onDragLeave, onDragOver, onDrop]",{"range":"124","text":"125"},"Update the dependencies array to be: [setData]",{"range":"126","text":"127"},"Update the dependencies array to be: [lifetime, onRemove, id]",{"range":"128","text":"129"},[7063,7101],"[onDragEnter, onDragLeave, onDragOver, onDrop]",[2008,2023],"[setData]",[1528,1562],"[lifetime, onRemove, id]"]